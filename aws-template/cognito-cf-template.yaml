AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: cognito user pool, identity pool, auth and unauth IAM role for gotcha-api

Parameters:
  EnvironmentName:
    Type: String
  GotchaApiId:
    Type: String
    Description: Id of gotcha api   

Resources: 
  GotchaUserPool:
    Type: AWS::Cognito::UserPool
    Properties: 
      AdminCreateUserConfig: 
        AllowAdminCreateUserOnly: true
        UnusedAccountValidityDays: 30
      UserPoolName: !Sub 'gotcha-user-pool-${EnvironmentName}'

  WebappClient:
    Type: AWS::Cognito::UserPoolClient
    Properties: 
      AllowedOAuthFlowsUserPoolClient: false
      ClientName: gotcha-webapp
      EnableTokenRevocation: true
      ExplicitAuthFlows: 
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      PreventUserExistenceErrors: ENABLED
      SupportedIdentityProviders: 
        - COGNITO
      UserPoolId: !Ref GotchaUserPool

  NativeClient:
    Type: AWS::Cognito::UserPoolClient
    Properties: 
      AllowedOAuthFlowsUserPoolClient: false
      ClientName: gotcha-native
      EnableTokenRevocation: true
      ExplicitAuthFlows: 
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      PreventUserExistenceErrors: ENABLED
      SupportedIdentityProviders: 
        - COGNITO
      UserPoolId: !Ref GotchaUserPool      

  GotchaIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties: 
      AllowClassicFlow: false
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders: 
        - ClientId: !Ref WebappClient
          ProviderName: !GetAtt GotchaUserPool.ProviderName
      IdentityPoolName: !Sub 'gotcha-identity-pool-${EnvironmentName}'
        # - environmentName: !Ref EnvironmentName

  IdentityPoolRoleAttachment: 
    Type: AWS::Cognito::IdentityPoolRoleAttachment 
    Properties: 
      IdentityPoolId: !Ref GotchaIdentityPool
      Roles: 
        "authenticated": !GetAtt IdenPoolAuthenticatedRole.Arn 
        "unauthenticated": !GetAtt IdenPoolUnAuthenticatedRole.Arn 
  
  IdenPoolAuthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - cognito-identity.amazonaws.com
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref GotchaIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: "unauthenticated"
      Policies:
        - PolicyName: InvokePrivateApiPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'execute-api:Invoke'
                Resource:
                  - !Sub 'arn:aws:execute-api:${AWS::Region}:*:${GotchaApiId}/*'

  IdenPoolUnAuthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - cognito-identity.amazonaws.com
            Action:
              - 'sts:AssumeRoleWithWebIdentity' 
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref GotchaIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: "unauthenticated"                 
      Policies:
        - PolicyName: InvokePrivateApiPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'execute-api:Invoke'
                Resource:
                  - !Sub 'arn:aws:execute-api:${AWS::Region}:*:${GotchaApiId}/*/api/public/*'